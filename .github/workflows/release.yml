name: 'release'

on:
  pull_request:
  push:
    branches:
      - master
  release:
    types: [created]

jobs:
  build-nexe-images:
    # Build and publish the images that this pipeline relies on
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - run: make docker-build
      - name: "Login to Docker Hub"
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - run: make docker-publish

  nexe-built-platforms:
    # Test fpie2 against platforms where we have to build nexe to get it working
    # (e.g. nexe doesn't play well w. Alpine out-of-the-box,
    # so we create an image where we've already spent the 1.5 hours to build nexe)
    needs:
      - build-nexe-images
    strategy:
      fail-fast: false
      matrix:
        name: ['alpine']
        container:
          - 'jonlauridsen/node-nexe:10-alpine'
        include:
          - name: 'alpine'
            os_name: 'Alpine'
            os: 'ubuntu-latest'
            filename: 'fpie2-alpine'
            do_upload: true
    name: test-${{ matrix.name }}-${{ matrix.node }}
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}
    steps:
      - if: ${{ matrix.prepare_cmd != '' }}
        run: ${{ matrix.prepare_cmd }}
      - uses: actions/checkout@master
      - run: npm ci

      - run: EXPECTED_FILENAME="${{ matrix.filename }}" EXPECTED_OS="${{ matrix.os_name }}" NEXE_TEMP=/opt/.nexe NEXE_BUILD=true npm test
      - run: NEXE_TEMP=/opt/.nexe npm run compile:build -- --output "dist/${{ matrix.filename }}"
      - if: ${{ matrix.do_upload == true }}
        uses: actions/upload-artifact@master
        with:
          name: "${{ matrix.filename }}"
          path: "dist/${{ matrix.filename }}"

  platforms:
    # Test fpie2 against platforms and upload their binary artifacts
    # (but note e.g. amazonlinux's binaries are the same as ubuntu's, in that case we only upload ubuntu's artifacts)
    strategy:
      fail-fast: false
      matrix:
        name: ['amazonlinux', 'mint', 'mac', 'ubuntu']
        node:
          - '10.19.0'
          - '12.16.2'
        include:
          - name: 'amazonlinux'
            os_name: 'Amazon Linux'
            os: 'ubuntu-latest'
            container: 'amazonlinux'
            prepare_cmd: 'yum install -y curl gzip make tar'
            filename: 'fpie2-ubuntu'
          - name: 'mint'
            os_name: 'Linux Mint'
            os: 'ubuntu-latest'
            container: 'linuxmintd/mint19.2-amd64'
            filename: 'fpie2-ubuntu'
          - name: 'mac'
            os_name: 'Mac'
            os: 'macos-latest'
            filename: 'fpie2-macos'
            do_upload: true
          - name: 'ubuntu'
            os_name: 'Ubuntu'
            os: 'ubuntu-latest'
            filename: 'fpie2-ubuntu'
            do_upload: true
    name: test-${{ matrix.name }}-${{ matrix.node }}
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}
    steps:
      - if: ${{ matrix.prepare_cmd != '' }}
        run: ${{ matrix.prepare_cmd }}
      - uses: actions/checkout@master
      - uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node }}
      - run: npm ci
      - run: EXPECTED_FILENAME="${{ matrix.filename }}" EXPECTED_OS="${{ matrix.os_name }}" npm test
      - run: npm run compile -- --output "dist/${{ matrix.filename }}"
      - if: ${{ matrix.do_upload == true && matrix.node == '12.16.2' }}
        uses: actions/upload-artifact@master
        with:
          name: "${{ matrix.filename }}"
          path: "dist/${{ matrix.filename }}"

  upload:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    needs:
      - nexe-built-platforms
      - platofrms
    steps:
      - uses: actions/download-artifact@master
        with:
          name: fpie2-alpine
          path: .
      - uses: actions/download-artifact@master
        with:
          name: fpie2-macos
          path: .
      - uses: actions/download-artifact@master
        with:
          name: fpie2-ubuntu
          path: .
      - run: ls
      - uses: skx/github-action-publish-binaries@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: '*'
